srchscrlvce = read.csv("frank_stroop.csv")
srchscrlvce = read.csv("frank-stroop.csv")
View(srchscrlvce)
kings <- scan("frank-stroop.csv)
kings
kings
kings <- scan("frank-stroop.csv",skip=3)
kings <- scan("frankstroop.csv",skip=3)
kings <- scan("frankstroop.csv")
srchscrlvce = read.csv("frankstroop.csv")
kings <- scan("srchscrlvce")
kings <- scan(srchscrlvce)
kings <- scan("frankstroop.csv")
kings <- scan("frankstroop.csv")
srchscrlvce = read.csv("frankstroop.csv")
view(srchscrlvce)
# read in a data file now with a third method, voice recognition
srchscrlvce = read.csv("frankstroop.csv")
View(srchscrlvce)
scatter.smooth(x=1:length(srchscrlvce$Column1.4), y=srchscrlvce$Column1.4)
scatter.smooth(x=1:10), y=srchscrlvce$Column1.4)
scatter.smooth(x=1:10), y=srchscrlvce$Column1.4)
scatter.smooth(x=1:10, y=srchscrlvce$Column1.4)
length(srchscrlvce$Column1.4)
scatter.smooth(x=2:length(srchscrlvce$Column1.4), y=srchscrlvce$Column1.4)
scatter.smooth(x=1:length(srchscrlvce$Column1.4), y=srchscrlvce$Column1.4)
# read in a data file now with a third method, voice recognition
srchscrlvce = read.csv("stroop-di.csv")
srchscrlvce$Subject = factor(srchscrlvce$Subject) # convert to nominal factor
srchscrlvce$Order = factor(srchscrlvce$Order) # convert to nominal factor
srchscrlvce$Level = factor(srchscrlvce$Level)
summary(srchscrlvce)
# view descriptive statistics by Technique
library(plyr)
ddply(srchscrlvce, ~ Level, function(data) summary(data$slope))
ddply(srchscrlvce, ~ Level, summarise, slope.mean=mean(slope), slope.sd=sd(slope))
plot(slope ~ Level, data=srchscrlvce) # boxplot
# graph histograms and boxplot
hist(srchscrlvce[srchscrlvce$Level == "Search",]$slope)
# repeated measures ANOVA
library(ez)
install.packages("ez")
# repeated measures ANOVA
library(ez)
# repeated measures ANOVA
library(ez)
# ez lets us specify the dependent variable (Time), within-Ss
# variables (Technique), and the variable that identifies
# subjects (Subject).
m = ezANOVA(dv=slope, within=Level, wid=Subject, data=srchscrlvce)
# we then check the model for violations of sphericity. Sphericity is
# the situation where the variances of the differences between all
# combinations of levels of a within-Ss factor are equal. It always
# holds for within-Ss factors that have just 2 levels, but for 3+
# levels, sphericity can be tested with Mauchly's Test of Sphericity.
m$Mauchly # p<.05 indicates a violation
# include the corrected DFs for each corrected effect
pos = match(m$`Sphericity Corrections`$Effect, m$ANOVA$Effect) # positions of within-Ss efx in m$ANOVA
m$Sphericity$GGe.DFn = m$Sphericity$GGe * m$ANOVA$DFn[pos] # Greenhouse-Geisser
# ez lets us specify the dependent variable (Time), within-Ss
# variables (Technique), and the variable that identifies
# subjects (Subject).
m = ezANOVA(dv=slope, within=Level, wid=Subject, data=srchscrlvce)
# we then check the model for violations of sphericity. Sphericity is
# the situation where the variances of the differences between all
# combinations of levels of a within-Ss factor are equal. It always
# holds for within-Ss factors that have just 2 levels, but for 3+
# levels, sphericity can be tested with Mauchly's Test of Sphericity.
m$Mauchly # p<.05 indicates a violation
# if no violation, examine the uncorrected ANOVA in m$ANOVA.
# if violation, instead look at m$Sphericity and use the
# Greenhouse-Geisser correction, GGe.
m$ANOVA
# include the corrected DFs for each corrected effect
pos = match(m$`Sphericity Corrections`$Effect, m$ANOVA$Effect) # positions of within-Ss efx in m$ANOVA
# the same uncorrected results are given by
m = aov(slope ~ Level + Error(Subject/Level), data=srchscrlvce) # fit model
# the same uncorrected results are given by
m = aov(slope ~ Level + Error(Subject/Level), data=srchscrlvce) # fit model
summary(m) # show anova
